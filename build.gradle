task upper doLast {
   String expString = 'TUTORIALS point'
   println "Original: " + expString
   println "Upper case: " + expString.toUpperCase()
}

task count doLast {
   4.times {
      print "$it " 
   }
}

task groovyJDK doLast {
   String myName = "Marc";
   myName.each() { 
      println "${it}" 
   };
}

task propAccess doLast {
    // Using a setter method
    project.buildDir = 'target'
    getProject().setBuildDir('target')

    // Using a getter method
    println project.buildDir
    println getProject().getBuildDir()
}

allprojects {
    task nestedOne {
        doLast {
            println "Nested one! @doLast"
        }

        doFirst {
            println "Nested one! @doFirst"
        }
    }
}

// tasks.create(name: 'hello') doLast {
//    println "tutorialspoint"
// }

// task hello

// println tasks.hello.name
// println tasks['hello'].name

task printAllTaskName doLast {
    tasks.findAll {
        task -> println task.name
    }
}

task taskX doLast {
   println 'taskX'
}
task lib1 doLast {
   println 'lib1'
}
task lib2 doLast {
   println 'lib2'
}
task notALib doLast {
   println 'notALib'
}
taskX.dependsOn lib1, lib2

task copy(type: Copy) {
   description 'Copies the resource directory to the target directory.'
   from 'resources'
   into 'target'
   include('**/*.txt', '**/*.xml', '**/*.properties')
   println("description applied")
   println(new Date().time)
}
